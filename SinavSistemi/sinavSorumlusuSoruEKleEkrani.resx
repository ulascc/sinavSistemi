<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="soruResimPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>