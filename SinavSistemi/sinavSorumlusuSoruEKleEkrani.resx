<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="soruResimPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gVx9kcl7XiPsjkvaAQhCD//Z
</value>
  </data>
</root>